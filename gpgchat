#!/bin/bash

echo
echo "GPG chat 1.0"
echo

if ! which gpg>/dev/null; then
    echo "\"gpg\" missing. Please install the \"gnupg\" package."
    echo
    exit 1
fi

if ! which ncat>/dev/null; then
    echo "\"ncat\" missing. Please install the \"nmap\" package."
    echo
    exit 1
fi

if [ $# -lt 3 ]; then
    echo "Usage: $0 <remote PGP id> <host> <local port> [remote port]"
    echo
    exit 1
fi

user_remote="$1"
host="$2"
port_local="$3"
[[ $# -eq 3 ]] && port_remote="$port_local" || port_remote="$4"

keys=$(gpg --list-keys "$user_remote" 2>/dev/null | grep -c '^$')
if [ "$keys" -eq 0 ]; then
    echo "No matching key for \"$user_remote\""
    echo
    exit 1
fi
if [ "$keys" -ne 1 ]; then
    gpg --list-keys "$user_remote"
    echo "Too many matching keys for \"$user_remote\""
    echo
    exit 1
fi

export GPG_TTY=$(tty)
script_path=$(dirname $0)
mkdir -p /tmp/gpgchat

echo -n 'Private key passphrase (will not echo): '
read -s passphrase
echo '********'
echo

echo "Starting listener at port $port_local"
while true
do
    output=$(ncat -l $port_local | gpg -d --batch --passphrase "$passphrase" 2>/dev/null)
    if echo "$output" | grep -q '^<<<'; then
        file_input="${output#???}"
        file_input=${file_input#"${file_input%%[![:space:]]*}"}
        file_input="/tmp/gpgchat/${file_input##*/}"
        echo -e "\033[33m<<< receiving file \"$file_input\" from \"$user_remote\"\033[0m"
        ncat -l $port_local | gpg -d --batch --passphrase "$passphrase" 2>/dev/null | base64 -d >"$file_input"
        echo -e "\033[33m<<< file \"$file_input\" ready\033[0m"
    else
        echo -e "\033[32m${output}\033[0m"
    fi
done &

echo -e "Initiating chat with \"$user_remote\" at $host, port $port_remote\n"
while true
do
    read message
    if [ ! -z "$message" ]; then
        if echo "$message" | grep -q '^>>>'; then
            file_output="${message#???}"
            file_output=${file_output#"${file_output%%[![:space:]]*}"}
            if [ -z "$file_output" ]; then
                file_output=$(python $script_path/getfile.py)
            fi
            if [ -f "$file_output" ]; then
                echo -e "\033[34m>>> sending file \"$file_output\" to \"$user_remote\"\033[0m"
                echo "<<<$file_output" | gpg -e -r "$user_remote" | ncat $host $port_remote
                sleep 1
                if cat "$file_output" | base64 | gpg -e -r "$user_remote" | ncat $host $port_remote; then
                    echo -e "\033[34m>>> file has been sent\033[0m"
                else
                    echo -e "\033[31m>>> file has not been sent\033[0m"
                fi
            else
                [[ -z "$file_output" ]] || echo ">>> file \"$file_output\" not found"
            fi
        elif echo "$message" | grep -q '^!!!'; then
            command="${message#???}"
            command=${command#"${command%%[![:space:]]*}"}
            [[ -z $command ]] && command="sh"
            echo -ne "\033[34m!!! executing \"$command\""
            [[ "$command" == "sh" ]] && echo -n ", type exit to return"
            echo -e "\033[0m"
            eval "$command"
            echo -e "\033[34m!!! finished \"$command\"\033[0m"
        else
            echo "$message" | gpg -e -r "$user_remote" | ncat $host $port_remote
        fi
    fi
done
