#!/bin/bash

echo
echo "GPG chat 1.0"
echo

if ! which gpg>/dev/null; then
    echo "\"gpg\" missing. Please install the \"gnupg\" package."
    echo
    exit 1
fi

if ! which ncat>/dev/null; then
    echo "\"ncat\" missing. Please install the \"nmap\" package."
    echo
    exit 1
fi

if [ $# -lt 3 ]; then
    echo "Usage: $0 <remote PGP id> <host> <local port> [remote port]"
    echo
    exit 1
fi

user_remote="$1"
host="$2"
port_local="$3"
[[ $# -eq 3 ]] && port_remote=$port_local || port_remote=$4

if [ "$(gpg --list-keys "$user_remote" | grep -c '^$')" -gt 1 ]; then
    echo "Too many keys for remote user"
    exit 1
fi

export GPG_TTY=$(tty)

echo -n 'Private key passphrase (will not echo): '
read -s passphrase
echo '********'
echo

echo "Starting listener at port $port_local"
while true
    do output=$(ncat -l $port_local | gpg -d --batch --passphrase "$passphrase" 2>/dev/null)
    if echo "$output" | grep -q '^<<<'; then
        file_input="${output#???}"
        file_input=${file_input#"${file_input%%[![:space:]]*}"}
        file_input=/tmp/${file_input##*/}
        echo "<<< receiving file $file_input from $user_remote"
        ncat -l $port_local | gpg -d --batch --passphrase "$passphrase" 2>/dev/null | base64 -d >$file_input
        echo "<<< $file_input ready"
    else
        echo -e "\033[32m${output}\033[0m"
    fi
done &

echo -e "Initiating chat with ${user_remote} at $host, port $port_remote"
echo

while true
do
    read n
    if echo "$n" | grep -q '^>>>'; then
        file="${n#???}"
        file=${file#"${file%%[![:space:]]*}"}
        if [ "$file" == "" ]; then
            file=$(python ./getfile.py)
        fi
        if [ -f "$file" ]; then
            echo ">>> sending file $file to $user_remote"
            echo "<<<$file" | gpg -e -r "$user_remote" | ncat $host $port_remote
            sleep 1
            cat $file | base64 | gpg -e -r "$user_remote" | ncat $host $port_remote
        else
            echo ">>> \"$file\" not found"
        fi
    else
        echo "$n" | gpg -e -r "$user_remote" | ncat $host $port_remote
    fi
done
